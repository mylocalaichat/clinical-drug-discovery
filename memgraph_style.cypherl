// Custom color palette for biomedical graph
// Colors chosen for clarity and distinction between entity types
Define(DRUG_COLOR, #2E7D32)          // Green for drugs
Define(DISEASE_COLOR, #C62828)       // Red for diseases
Define(PROTEIN_COLOR, #1565C0)       // Blue for proteins/genes
Define(PATHWAY_COLOR, #F57C00)       // Orange for pathways
Define(DEFAULT_COLOR, #757575)       // Gray for other types

// Function to get color based on node_type property
Define(GetColorByNodeType, Function(node_type,
  If(Equals(node_type, "drug"), DRUG_COLOR,
  If(Equals(node_type, "disease"), DISEASE_COLOR,
  If(Equals(node_type, "gene/protein"), PROTEIN_COLOR,
  If(Equals(node_type, "pathway"), PATHWAY_COLOR,
  DEFAULT_COLOR))))
))

// Baseline node style that will be applied to every single node
@NodeStyle {
  Define(NODE_TYPE, Property(node, "node_type"))
  Define(COLOR, GetColorByNodeType(NODE_TYPE))

  size: 8
  color: COLOR
  color-hover: Lighter(COLOR)
  color-selected: Darker(COLOR)
  border-width: 0
  font-size: 4
  font-color: #000000
}

// Style for drug nodes
@NodeStyle Equals(Property(node, "node_type"), "drug") {
  Define(COLOR, DRUG_COLOR)

  size: 10
  color: COLOR
  color-hover: Lighter(COLOR)
  color-selected: Darker(COLOR)
  border-width: 0
  font-size: 5
}

// Style for disease nodes
@NodeStyle Equals(Property(node, "node_type"), "disease") {
  Define(COLOR, DISEASE_COLOR)

  size: 10
  color: COLOR
  color-hover: Lighter(COLOR)
  color-selected: Darker(COLOR)
  border-width: 0
  font-size: 5
}

// Style for protein/gene nodes
@NodeStyle Equals(Property(node, "node_type"), "gene/protein") {
  Define(COLOR, PROTEIN_COLOR)

  size: 9
  color: COLOR
  color-hover: Lighter(COLOR)
  color-selected: Darker(COLOR)
  border-width: 0
  font-size: 4
}

// Style for pathway nodes
@NodeStyle Equals(Property(node, "node_type"), "pathway") {
  Define(COLOR, PATHWAY_COLOR)

  size: 12
  color: COLOR
  color-hover: Lighter(COLOR)
  color-selected: Darker(COLOR)
  border-width: 0
  font-size: 4
}

// Use node_name property for label if it exists
@NodeStyle HasProperty(node, "node_name") {
  label: AsText(Property(node, "node_name"))
}

// Fall back to "name" property if node_name doesn't exist
@NodeStyle And(Not(HasProperty(node, "node_name")), HasProperty(node, "name")) {
  label: AsText(Property(node, "name"))
}

// Highlight example nodes (removed border for cleaner look)
@NodeStyle Equals(Property(node, "is_example"), True) {
  border-width: 0
}

// Edge styling based on relationship types
@EdgeStyle {
  color: #999999
  color-hover: #333333
  color-selected: #000000
  width: 0.5
  width-hover: 1.5
  width-selected: 2
  font-size: 3
  font-color: #000000
}

// Drug-target edges (drug -> protein)
@EdgeStyle Equals(Property(edge, "relation"), "drug_targets_protein") {
  color: #2E7D32
  width: 1.2
}

// Drug-disease treatment edges
@EdgeStyle Equals(Property(edge, "relation"), "drug_treats_disease") {
  color: #8BC34A
  width: 2
}

// Protein-disease associations
@EdgeStyle Equals(Property(edge, "relation"), "protein_disease_association") {
  color: #E53935
  width: 1
}

// Pathway-disease associations
@EdgeStyle Equals(Property(edge, "relation"), "pathway_disease_association") {
  color: #FF6F00
  width: 1
}

// Protein-protein interactions
@EdgeStyle Equals(Property(edge, "relation"), "protein_regulates_protein") {
  color: #1976D2
  width: 0.8
}

// Protein-pathway participation
@EdgeStyle Equals(Property(edge, "relation"), "protein_participates_pathway") {
  color: #FFA726
  width: 0.8
}

// Similarity edges (drug or disease)
@EdgeStyle Or(
  Equals(Property(edge, "relation"), "drug_similarity"),
  Equals(Property(edge, "relation"), "disease_similarity")
) {
  color: #9C27B0
  width: 1.5
}

// Highlight example edges
@EdgeStyle Equals(Property(edge, "is_example"), True) {
  width: 1.5
}

// Show edge labels for small graphs or high confidence
@EdgeStyle Less(EdgeCount(graph), 50) {
  label: Property(edge, "display_relation")
}

// Show confidence scores on edges if they exist
@EdgeStyle And(
  HasProperty(edge, "confidence"),
  Greater(Property(edge, "confidence"), 0.9)
) {
  label: Format("{} ({})", Property(edge, "display_relation"), Property(edge, "confidence"))
  font-size: 3.5
}

// Show similarity scores on similarity edges
@EdgeStyle And(
  HasProperty(edge, "similarity_score"),
  Or(
    Equals(Property(edge, "relation"), "drug_similarity"),
    Equals(Property(edge, "relation"), "disease_similarity")
  )
) {
  label: Format("sim: {}", Property(edge, "similarity_score"))
  font-size: 3
}

// Geographic properties (if lat/lng exist)
Define(LATITUDE_FIELD, "lat")
Define(LONGITUDE_FIELD, "lng")

@NodeStyle And(IsNumber(Property(node, LATITUDE_FIELD)), IsNumber(Property(node, LONGITUDE_FIELD))) {
  latitude: Property(node, LATITUDE_FIELD)
  longitude: Property(node, LONGITUDE_FIELD)
}

// Default view styles
@ViewStyle {
  background-color: #F5F5F5
}
